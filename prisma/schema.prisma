// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// model User
model User {
  id            String   @id @default(uuid())
  email         String   @unique
  name          String
  password      String   @db.VarChar(255)
  role          Role     @default(value: USER)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  passwordToken String

  //  token
  token Token?

  //  video
  video Video[]

  //  comments
  comment Comment[]
}

// model RefreshToken 
model Token {
  id           String   @default(uuid())
  refreshToken String
  ip           String
  userAgent    String
  isValid      Boolean  @default(true)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // user
  userId String @unique
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

//  model Video
model Video {
  id          String   @unique @default(uuid())
  title       String   @db.VarChar(30)
  description String   @db.Text
  viewCount   Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  //  video format
  fileUrl String @db.VarChar(255)

  //  user
  userId  String
  user    User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  Comment Comment[]
}

//  model Comment
model Comment {
  id        String   @unique @default(uuid())
  message   String   @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  //  user
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  // video
  videoId String @unique
  video   Video  @relation(fields: [videoId], references: [id])
}

// enum Role
enum Role {
  USER
  ADMIN
}
